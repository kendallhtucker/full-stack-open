{"ast":null,"code":"var _jsxFileName = \"/Users/kendallhtucker1/dev/university of helskinki full stack class/full-stack-open/exercises-3.1-3.8/frontend/src/addnew.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport React from 'react';\nimport peopleService from './services/persons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddNew = props => {\n  _s();\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [successMessage, setSuccessMessage] = useState(``);\n  const Notification = _ref => {\n    let {\n      message\n    } = _ref;\n    if (message === null) {\n      return null;\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this);\n  };\n\n  // what happens on submit (name and number get added to array in server)\n  const addName = event => {\n    event.preventDefault();\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    };\n\n    //check if name is already in list\n    if (props.list.some(object => object.name === newName)) {\n      window.alert(`${newName} is already added to phonebook`);\n    } else {\n      peopleService.create(nameObject).then(returnedNote => {\n        props.setlist(props.list.concat(returnedNote));\n        setSuccessMessage(`Added ${nameObject.name}`);\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 5000);\n        setNewName('');\n        setNewNumber('');\n      });\n    }\n  };\n\n  // event handler that tracks what's written in name box\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  // event handler that tracks what's written in number box\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"add new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addName,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newName,\n          onChange: handleNameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"number: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newNumber,\n          onChange: handleNumberChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(AddNew, \"E/awuLyFEfaL43yOdyX+3gF02wg=\");\n_c = AddNew;\nexport default AddNew;\nvar _c;\n$RefreshReg$(_c, \"AddNew\");","map":{"version":3,"names":["useState","React","peopleService","AddNew","props","newName","setNewName","newNumber","setNewNumber","successMessage","setSuccessMessage","Notification","message","addName","event","preventDefault","nameObject","name","number","list","some","object","window","alert","create","then","returnedNote","setlist","concat","setTimeout","handleNameChange","target","value","handleNumberChange"],"sources":["/Users/kendallhtucker1/dev/university of helskinki full stack class/full-stack-open/exercises-3.1-3.8/frontend/src/addnew.js"],"sourcesContent":["import { useState } from 'react'\nimport React from 'react'\nimport peopleService from './services/persons'\n\nconst AddNew = (props) => {\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [successMessage, setSuccessMessage] = useState(``)\n\n    const Notification = ({ message }) => {\n        if (message === null) {\n          return null\n        }\n      \n        return (\n          <div className='success'>\n            {message}\n          </div>\n        )\n      }\n    \n    // what happens on submit (name and number get added to array in server)\n    const addName = (event) => {\n        event.preventDefault()\n        const nameObject = {\n            name: newName,\n            number: newNumber,\n        }\n\n        //check if name is already in list\n        if (props.list.some(object => object.name === newName)) {\n            window.alert(`${newName} is already added to phonebook`)\n        } else {\n            peopleService\n                .create(nameObject)\n                .then(returnedNote => {\n                    props.setlist(props.list.concat(returnedNote))\n                    setSuccessMessage(`Added ${nameObject.name}`)\n                    setTimeout(() => {\n                        setSuccessMessage(null)\n                      }, 5000)\n                    setNewName('')\n                    setNewNumber('')\n                })\n        }\n    }\n\n    // event handler that tracks what's written in name box\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    // event handler that tracks what's written in number box\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n    return (\n        <div>\n            <h2>add new</h2>\n            <Notification message={successMessage} />\n            <form onSubmit={addName}>\n                <div>\n                    name: <input\n                        value={newName}\n                        onChange={handleNameChange}\n                    />\n                </div>\n                <div>\n                    number: <input\n                        value={newNumber}\n                        onChange={handleNumberChange}\n                    />\n                </div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n        </div>\n    )\n\n}\n\nexport default AddNew"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,oBAAoB;AAAA;AAE9C,MAAMC,MAAM,GAAIC,KAAK,IAAK;EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAE,EAAC,CAAC;EAExD,MAAMW,YAAY,GAAG,QAAiB;IAAA,IAAhB;MAAEC;IAAQ,CAAC;IAC7B,IAAIA,OAAO,KAAK,IAAI,EAAE;MACpB,OAAO,IAAI;IACb;IAEA,oBACE;MAAK,SAAS,EAAC,SAAS;MAAA,UACrBA;IAAO;MAAA;MAAA;MAAA;IAAA,QACJ;EAEV,CAAC;;EAEH;EACA,MAAMC,OAAO,GAAIC,KAAK,IAAK;IACvBA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMC,UAAU,GAAG;MACfC,IAAI,EAAEZ,OAAO;MACba,MAAM,EAAEX;IACZ,CAAC;;IAED;IACA,IAAIH,KAAK,CAACe,IAAI,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACJ,IAAI,KAAKZ,OAAO,CAAC,EAAE;MACpDiB,MAAM,CAACC,KAAK,CAAE,GAAElB,OAAQ,gCAA+B,CAAC;IAC5D,CAAC,MAAM;MACHH,aAAa,CACRsB,MAAM,CAACR,UAAU,CAAC,CAClBS,IAAI,CAACC,YAAY,IAAI;QAClBtB,KAAK,CAACuB,OAAO,CAACvB,KAAK,CAACe,IAAI,CAACS,MAAM,CAACF,YAAY,CAAC,CAAC;QAC9ChB,iBAAiB,CAAE,SAAQM,UAAU,CAACC,IAAK,EAAC,CAAC;QAC7CY,UAAU,CAAC,MAAM;UACbnB,iBAAiB,CAAC,IAAI,CAAC;QACzB,CAAC,EAAE,IAAI,CAAC;QACVJ,UAAU,CAAC,EAAE,CAAC;QACdE,YAAY,CAAC,EAAE,CAAC;MACpB,CAAC,CAAC;IACV;EACJ,CAAC;;EAED;EACA,MAAMsB,gBAAgB,GAAIhB,KAAK,IAAK;IAChCR,UAAU,CAACQ,KAAK,CAACiB,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAInB,KAAK,IAAK;IAClCN,YAAY,CAACM,KAAK,CAACiB,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EACD,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eAChB,QAAC,YAAY;MAAC,OAAO,EAAEvB;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG,eACzC;MAAM,QAAQ,EAAEI,OAAQ;MAAA,wBACpB;QAAA,kCACU;UACF,KAAK,EAAER,OAAQ;UACf,QAAQ,EAAEyB;QAAiB;UAAA;UAAA;UAAA;QAAA,QAC7B;MAAA;QAAA;QAAA;QAAA;MAAA,QACA,eACN;QAAA,oCACY;UACJ,KAAK,EAAEvB,SAAU;UACjB,QAAQ,EAAE0B;QAAmB;UAAA;UAAA;UAAA;QAAA,QAC/B;MAAA;QAAA;QAAA;QAAA;MAAA,QACA,eACN;QAAA,uBACI;UAAQ,IAAI,EAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAa;QAAA;QAAA;QAAA;MAAA,QAChC;IAAA;MAAA;MAAA;MAAA;IAAA,QACH;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAGd,CAAC;AAAA,GA5EK9B,MAAM;AAAA,KAANA,MAAM;AA8EZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}