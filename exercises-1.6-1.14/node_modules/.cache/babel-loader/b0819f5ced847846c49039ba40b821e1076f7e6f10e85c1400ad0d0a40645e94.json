{"ast":null,"code":"var _jsxFileName = \"/Users/kendallhtucker1/dev/university of helskinki full stack class/full-stack-open/exercises-1.6/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatisticLine = props => {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: props.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: props.variable\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this)\n  //  <p>{props.text} {props.variable}</p>\n  ;\n};\n_c = StatisticLine;\nconst Statistics = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"good\",\n      variable: props.good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"neutral\",\n      variable: props.neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"bad\",\n      variable: props.bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"all\",\n      variable: props.all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"average\",\n      variable: props.average.toFixed(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"positive\",\n      variable: (props.positive * 100).toFixed(0) + \"%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Statistics;\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.action,\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Button;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [all, setAll] = useState(0);\n  const [average, setAverage] = useState(0);\n  const [positive, setPositive] = useState(0);\n  const handleGood = () => {\n    setGood(good + 1);\n    setAll(all + 1);\n    setAverage((good - bad + 1) / (all + 1));\n    setPositive((good + 1) / (all + 1));\n  };\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n    setAll(all + 1);\n    setAverage((good - bad) / (all + 1));\n    setPositive(good / (all + 1));\n  };\n  const handleBad = () => {\n    setBad(bad + 1);\n    setAll(all + 1);\n    setAverage((good - bad - 1) / (all + 1));\n    setPositive(good / (all + 1));\n  };\n\n  //random anecdote generator\n  const anecdotes = ['If it hurts, do it more often.', 'Adding manpower to a late software project makes it later!', 'The first 90 percent of the code accounts for the first 10 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.', 'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.', 'Premature optimization is the root of all evil.', 'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.', 'Programming without an extremely heavy use of console.log is same as if a doctor would refuse to use x-rays or blood tests when diagnosing patients.'];\n  const [selected, setSelected] = useState(\"\");\n  const handleAnecdote = () => {\n    console.log(anecdotes[1]);\n    setSelected(anecdotes[1]);\n    return selected;\n  };\n  if (all > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"give feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        action: handleGood,\n        text: \"good\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        action: handleNeutral,\n        text: \"neutral\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        action: handleBad,\n        text: \"bad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        good: good,\n        bad: bad,\n        neutral: neutral,\n        all: all,\n        average: average,\n        positive: positive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAnecdote,\n        children: \"random anecdote generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"give feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGood,\n        children: \"good\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNeutral,\n        children: \"neutral\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBad,\n        children: \"bad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAnecdote,\n        children: \"random anecdote generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), selected]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(App, \"0vtVT5xjXwKXKQ+Ipm25Y2KdEf8=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"StatisticLine\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","StatisticLine","props","text","variable","Statistics","good","neutral","bad","all","average","toFixed","positive","Button","action","App","setGood","setNeutral","setBad","setAll","setAverage","setPositive","handleGood","handleNeutral","handleBad","anecdotes","selected","setSelected","handleAnecdote","console","log"],"sources":["/Users/kendallhtucker1/dev/university of helskinki full stack class/full-stack-open/exercises-1.6/src/App.js"],"sourcesContent":["import { useState } from 'react'\nimport \"./App.css\";\n\nconst StatisticLine = (props) => {\n  return (\n    <table>\n      <tbody>\n      <tr>\n        <td>{props.text}</td>\n        <td>{props.variable}</td>\n      </tr>\n      </tbody>\n    </table>\n    //  <p>{props.text} {props.variable}</p>\n  )\n}\n\nconst Statistics = (props) => {\n  return (\n    <div>\n      <h1>statistics</h1>\n      <StatisticLine text=\"good\" variable={props.good} />\n      <StatisticLine text=\"neutral\" variable={props.neutral} />\n      <StatisticLine text=\"bad\" variable={props.bad} />\n      <StatisticLine text=\"all\" variable={props.all} />\n      <StatisticLine text=\"average\" variable={props.average.toFixed(2)} />\n      <StatisticLine text=\"positive\" variable={(props.positive * 100).toFixed(0) + \"%\"} />\n    </div>\n  )\n}\n\nconst Button = (props) => {\n  return (\n    <button onClick={props.action}>{props.text}</button>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [all, setAll] = useState(0)\n  const [average, setAverage] = useState(0)\n  const [positive, setPositive] = useState(0)\n\n  const handleGood = () => {\n    setGood(good + 1)\n    setAll(all + 1);\n    setAverage((good - bad + 1) / (all + 1))\n    setPositive((good + 1) / (all + 1))\n  }\n\n  const handleNeutral = () => {\n    setNeutral(neutral + 1)\n    setAll(all + 1)\n    setAverage((good - bad) / (all + 1))\n    setPositive(good / (all + 1))\n  }\n\n  const handleBad = () => {\n    setBad(bad + 1)\n    setAll(all + 1)\n    setAverage((good - bad - 1) / (all + 1))\n    setPositive(good / (all + 1))\n  }\n\n  //random anecdote generator\n  const anecdotes = [\n    'If it hurts, do it more often.',\n    'Adding manpower to a late software project makes it later!',\n    'The first 90 percent of the code accounts for the first 10 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.',\n    'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.',\n    'Premature optimization is the root of all evil.',\n    'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.',\n    'Programming without an extremely heavy use of console.log is same as if a doctor would refuse to use x-rays or blood tests when diagnosing patients.'\n  ]\n   \n  const [selected, setSelected] = useState(\"\")\n  const handleAnecdote = () => {\n    console.log(anecdotes[1])\n    setSelected(anecdotes[1])\n    return (\n    selected\n    )\n  }\n\n  if (all > 0) {\n    return (\n      <div>\n        <h1>give feedback</h1>\n        <Button action={handleGood} text=\"good\" />\n        <Button action={handleNeutral} text=\"neutral\" />\n        <Button action={handleBad} text=\"bad\" />\n        <Statistics good={good} bad={bad} neutral={neutral} all={all} average={average} positive={positive} />\n        <h1></h1>\n        <button onClick={handleAnecdote}>random anecdote generator</button>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <h1>give feedback</h1>\n        <button onClick={handleGood}>good</button>\n        <button onClick={handleNeutral}>neutral</button>\n        <button onClick={handleBad}>bad</button>\n        <h1>statistics</h1>\n        <p>No feedback given</p>\n        <button onClick={handleAnecdote}>random anecdote generator</button>\n        {selected}\n      </div>\n    )\n  }\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}