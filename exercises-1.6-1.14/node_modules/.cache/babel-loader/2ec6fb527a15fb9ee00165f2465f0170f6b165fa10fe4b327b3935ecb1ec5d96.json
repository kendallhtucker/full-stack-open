{"ast":null,"code":"var _jsxFileName = \"/Users/kendallhtucker1/dev/university of helskinki full stack class/full-stack-open/exercises-1.6/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Statistics = (good, bad, all) => {\n  _s();\n  const [average, setAverage] = useState(0);\n  if (all > 0) {\n    setAverage((good * 1 + bad * -1) / all);\n  }\n  console.log(good);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"average \", average]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(Statistics, \"B1DNwPr7b9tGAgYsI+0nIq0XB9M=\");\n_c = Statistics;\nconst App = () => {\n  _s2();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [all, setAll] = useState(0);\n  const [positive, setPositive] = useState(0);\n  const handleGood = () => {\n    setGood(good + 1);\n    setAll(all + 1);\n  };\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n    setAll(all + 1);\n  };\n  const handleBad = () => {\n    setBad(bad + 1);\n    setAll(all + 1);\n  };\n\n  /* const HandleAverage = () => {\n    if (all > 0) {\n      setAverage((good * 1 + bad * -1) / all)\n    }\n    return (\n      <div>\n        average {average}\n      </div>\n    )\n  } */\n\n  const HandlePositive = () => {\n    if (all > 0) {\n      setPositive(good / all);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"positive \", positive]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGood,\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNeutral,\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBad,\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", all]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      bad: bad,\n      all: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HandlePositive, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"tp5fcegUr1AtgB/XEEDRNO7TIo8=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","Statistics","good","bad","all","average","setAverage","console","log","App","setGood","neutral","setNeutral","setBad","setAll","positive","setPositive","handleGood","handleNeutral","handleBad","HandlePositive"],"sources":["/Users/kendallhtucker1/dev/university of helskinki full stack class/full-stack-open/exercises-1.6/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Statistics = (good, bad, all) => {\n  const [average, setAverage] = useState(0)\n  if (all > 0) {\n    setAverage((good * 1 + bad * -1) / all)\n  }\n  console.log(good)\n  return (\n    <div>\n      average {average}\n    </div>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [all, setAll] = useState(0)\n  const [positive, setPositive] = useState(0)\n\n\n  const handleGood = () => {\n    setGood(good + 1)\n    setAll(all + 1)\n  }\n\n  const handleNeutral = () => {\n    setNeutral(neutral + 1)\n    setAll(all + 1)\n  }\n\n  const handleBad = () => {\n    setBad(bad + 1)\n    setAll(all + 1)\n  }\n\n  /* const HandleAverage = () => {\n    if (all > 0) {\n      setAverage((good * 1 + bad * -1) / all)\n    }\n    return (\n      <div>\n        average {average}\n      </div>\n    )\n  } */\n\n  const HandlePositive = () => {\n    if (all > 0) {\n      setPositive(good / (all))\n    }\n    return (\n      <div>\n        positive {positive}\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <button onClick={handleGood}>good</button>\n      <button onClick={handleNeutral}>neutral</button>\n      <button onClick={handleBad}>bad</button>\n      <h1>statistics</h1>\n      <p>good {good}</p>\n      <p>neutral {neutral}</p>\n      <p>bad {bad}</p>\n      <p>all {all}</p>\n      {/* <HandleAverage /> */}\n      <Statistics good={good} bad={bad} all={all} />\n      <HandlePositive />\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}