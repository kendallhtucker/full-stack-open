{"ast":null,"code":"var _jsxFileName = \"/Users/kendallhtucker1/dev/university of helskinki full stack class/full-stack-open/exercises-1.6/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Statistics = (good, bad, all) => {\n  _s();\n  const [average, setAverage] = useState(0);\n  const [positive, setPositive] = useState(0);\n\n  // calculate average\n  if (all > 0) {\n    setAverage((good * 1 + bad * -1) / all);\n  }\n  console.log(good);\n\n  //calculate % positive\n  if (all > 0) {\n    setPositive(good / all);\n  }\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\" positive \", positive, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 29\n    }, this), \"average \", average, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Statistics, \"szlx+/m/R5fphjVXAwDWbBLwjEo=\");\n_c = Statistics;\nconst App = () => {\n  _s2();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [all, setAll] = useState(0);\n  const handleGood = () => {\n    setGood(good + 1);\n    setAll(all + 1);\n    /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      bad: bad,\n      all: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this);\n  };\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n    setAll(all + 1);\n  };\n  const handleBad = () => {\n    setBad(bad + 1);\n    setAll(all + 1);\n  };\n\n  /* const HandleAverage = () => {\n    if (all > 0) {\n      setAverage((good * 1 + bad * -1) / all)\n    }\n    return (\n      <div>\n        average {average}\n      </div>\n    )\n  } */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGood,\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNeutral,\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBad,\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", all]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"uTssgC4nlUSepBgkUpbW/ujAc84=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","Statistics","good","bad","all","average","setAverage","positive","setPositive","console","log","App","setGood","neutral","setNeutral","setBad","setAll","handleGood","handleNeutral","handleBad"],"sources":["/Users/kendallhtucker1/dev/university of helskinki full stack class/full-stack-open/exercises-1.6/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Statistics = (good, bad, all) => {\n  const [average, setAverage] = useState(0)\n  const [positive, setPositive] = useState(0)\n\n  // calculate average\n  if (all > 0) {\n    setAverage((good * 1 + bad * -1) / all)\n  }\n  console.log(good)\n\n  //calculate % positive\n  if (all > 0) {\n    setPositive(good / (all))\n  }\n\n  return (\n    <p> positive {positive} <br></br>\n      average {average} </p>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [all, setAll] = useState(0)\n\n  const handleGood = () => {\n    setGood(good + 1)\n    setAll(all + 1);\n    <Statistics good={good} bad={bad} all={all} />\n  }\n\n  const handleNeutral = () => {\n    setNeutral(neutral + 1)\n    setAll(all + 1)\n  }\n\n  const handleBad = () => {\n    setBad(bad + 1)\n    setAll(all + 1)\n  }\n\n  /* const HandleAverage = () => {\n    if (all > 0) {\n      setAverage((good * 1 + bad * -1) / all)\n    }\n    return (\n      <div>\n        average {average}\n      </div>\n    )\n  } */\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <button onClick={handleGood}>good</button>\n      <button onClick={handleNeutral}>neutral</button>\n      <button onClick={handleBad}>bad</button>\n      <h1>statistics</h1>\n      <p>good {good}</p>\n      <p>neutral {neutral}</p>\n      <p>bad {bad}</p>\n      <p>all {all}</p>\n      {/* <HandleAverage /> */}\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}