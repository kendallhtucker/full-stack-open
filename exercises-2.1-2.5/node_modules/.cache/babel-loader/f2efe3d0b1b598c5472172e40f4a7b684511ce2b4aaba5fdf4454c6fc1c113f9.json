{"ast":null,"code":"var _jsxFileName = \"/Users/kendallhtucker1/dev/university of helskinki full stack class/full-stack-open/exercises-2.1-2.5/src/App.js\";\nimport \"./App.css\";\n\n//shit we need for sum\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValue = 0;\nconst Sum = props => {\n  const array = props.array;\n  {\n    array.reduce((sum, amount) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"bold\",\n        children: [\"total of \", sum + amount.exercises, \" exercises\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this);\n    }, initialValue);\n  }\n};\n_c = Sum;\nconst Course = props => {\n  //make course a local array\n  const courselist = props.courses.map(x => x);\n  console.log(\"courselist = \", courselist);\n\n  //seperate parts from course (just did this to learn)\n  var parts = courselist[0].parts.map(x => x);\n  console.log(\"parts = \", parts);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: courselist.map((part, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: part.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), courselist[i].parts.map((subpart, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [subpart.name, \" \", subpart.exercises]\n      }, subpart.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this)), courselist[i].parts.reduce((sum, amount) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"bold\",\n          children: [\"total of \", sum + amount.exercises, \" exercises\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this);\n      }, initialValue)]\n    }, part.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n};\n_c2 = Course;\nconst App = () => {\n  const courses = [{\n    name: 'Half Stack application development',\n    id: 1,\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10,\n      id: 1\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7,\n      id: 2\n    }, {\n      name: 'State of a component',\n      exercises: 14,\n      id: 3\n    }, {\n      name: 'Redux',\n      exercises: 11,\n      id: 4\n    }]\n  }, {\n    name: 'Node.js',\n    id: 2,\n    parts: [{\n      name: 'Routing',\n      exercises: 3,\n      id: 1\n    }, {\n      name: 'Middlewares',\n      exercises: 7,\n      id: 2\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Course, {\n      courses: courses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 7\n  }, this);\n};\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Sum\");\n$RefreshReg$(_c2, \"Course\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["initialValue","Sum","props","array","reduce","sum","amount","exercises","Course","courselist","courses","map","x","console","log","parts","part","i","name","subpart","id","App"],"sources":["/Users/kendallhtucker1/dev/university of helskinki full stack class/full-stack-open/exercises-2.1-2.5/src/App.js"],"sourcesContent":["import \"./App.css\"\n\n//shit we need for sum\nconst initialValue = 0\n\nconst Sum = (props) => {\n  const array = props.array\n  {\n    array.reduce((sum, amount) => {\n      return (\n        <div id=\"bold\">total of {sum + amount.exercises} exercises</div>\n      )\n    }, initialValue)\n  }\n}\n\n  const Course = (props) => {\n    //make course a local array\n    const courselist = props.courses.map((x) => x)\n    console.log(\"courselist = \", courselist)\n\n    //seperate parts from course (just did this to learn)\n    var parts = courselist[0].parts.map((x) => x)\n    console.log(\"parts = \", parts)\n\n\n\n    return (\n      <div>\n        {/* get all courses */}\n        {courselist.map((part, i) =>\n          <div key={part.id}>\n            <h1>{part.name}</h1>\n\n            {/* get all parts */}\n            {courselist[i].parts.map((subpart, i) =>\n              <p key={subpart.id}>\n                {subpart.name} {subpart.exercises}\n              </p>\n            )}\n\n            {/* sum parts in this course*/}\n            {courselist[i].parts.reduce((sum, amount) => {\n              return (\n                <div id=\"bold\">total of {sum + amount.exercises} exercises</div>\n              )\n            }, initialValue)\n            }\n            {/* <Sum array={courselist[i].parts} /> */}\n\n          </div>\n        )}\n      </div>\n    )\n  }\n\n  const App = () => {\n    const courses = [\n      {\n        name: 'Half Stack application development',\n        id: 1,\n        parts: [\n          {\n            name: 'Fundamentals of React',\n            exercises: 10,\n            id: 1\n          },\n          {\n            name: 'Using props to pass data',\n            exercises: 7,\n            id: 2\n          },\n          {\n            name: 'State of a component',\n            exercises: 14,\n            id: 3\n          },\n          {\n            name: 'Redux',\n            exercises: 11,\n            id: 4\n          }\n        ]\n      },\n      {\n        name: 'Node.js',\n        id: 2,\n        parts: [\n          {\n            name: 'Routing',\n            exercises: 3,\n            id: 1\n          },\n          {\n            name: 'Middlewares',\n            exercises: 7,\n            id: 2\n          }\n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <Course courses={courses} />\n      </div>\n    )\n  }\n\n  export default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}