{"ast":null,"code":"var _jsxFileName = \"/Users/kendallhtucker1/dev/university of helskinki full stack class/full-stack-open/exercises-2.1-2.5/src/Course.js\";\nimport \"./App.css\";\n\n//shit we need for sum\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValue = 0;\nconst Sum = props => {\n  const array = props.array;\n  console.log(\"array = \", array);\n  const total = array.reduce((sum, amount) => {\n    console.log(\"hello\", sum, amount);\n    return sum + amount.exercises;\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"bold\",\n    children: [\"total of \", total, \" exercises\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = Sum;\nconst Course = props => {\n  //make course a local array\n  const courselist = props.courses.map(x => x);\n  console.log(\"courselist = \", courselist);\n\n  //seperate parts from course (just did this to learn)\n  var parts = courselist[0].parts.map(x => x);\n  console.log(\"parts = \", parts);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: courselist.map((part, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: part.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), courselist[i].parts.map((subpart, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [subpart.name, \" \", subpart.exercises]\n      }, subpart.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(Sum, {\n        array: courselist[i].parts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, part.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Course;\nexport default Course;\nvar _c, _c2;\n$RefreshReg$(_c, \"Sum\");\n$RefreshReg$(_c2, \"Course\");","map":{"version":3,"names":["initialValue","Sum","props","array","console","log","total","reduce","sum","amount","exercises","Course","courselist","courses","map","x","parts","part","i","name","subpart","id"],"sources":["/Users/kendallhtucker1/dev/university of helskinki full stack class/full-stack-open/exercises-2.1-2.5/src/Course.js"],"sourcesContent":["import \"./App.css\"\n\n//shit we need for sum\nconst initialValue = 0\n\nconst Sum = (props) => {\n  const array = props.array\n\n  console.log(\"array = \", array)\n\n  const total = array.reduce((sum, amount) => {\n    console.log(\"hello\", sum, amount)\n    return (\n      sum + amount.exercises\n    )\n  }, 0)\n\n  return (\n    <div id=\"bold\">total of {total} exercises</div>\n  )\n}\n\nconst Course = (props) => {\n  //make course a local array\n  const courselist = props.courses.map((x) => x)\n  console.log(\"courselist = \", courselist)\n\n  //seperate parts from course (just did this to learn)\n  var parts = courselist[0].parts.map((x) => x)\n  console.log(\"parts = \", parts)\n\n\n\n  return (\n    <div>\n      {/* get all courses */}\n      {courselist.map((part, i) =>\n        <div key={part.id}>\n          <h1>{part.name}</h1>\n\n          {/* get all parts */}\n          {courselist[i].parts.map((subpart, i) =>\n            <p key={subpart.id}>\n              {subpart.name} {subpart.exercises}\n            </p>\n          )}\n\n          {/* sum parts in this course*/}\n          <Sum array={courselist[i].parts} />\n\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Course"],"mappings":";AAAA,OAAO,WAAW;;AAElB;AAAA;AACA,MAAMA,YAAY,GAAG,CAAC;AAEtB,MAAMC,GAAG,GAAIC,KAAK,IAAK;EACrB,MAAMC,KAAK,GAAGD,KAAK,CAACC,KAAK;EAEzBC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,KAAK,CAAC;EAE9B,MAAMG,KAAK,GAAGH,KAAK,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAK;IAC1CL,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEG,GAAG,EAAEC,MAAM,CAAC;IACjC,OACED,GAAG,GAAGC,MAAM,CAACC,SAAS;EAE1B,CAAC,EAAE,CAAC,CAAC;EAEL,oBACE;IAAK,EAAE,EAAC,MAAM;IAAA,wBAAWJ,KAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAAiB;AAEnD,CAAC;AAAA,KAfKL,GAAG;AAiBT,MAAMU,MAAM,GAAIT,KAAK,IAAK;EACxB;EACA,MAAMU,UAAU,GAAGV,KAAK,CAACW,OAAO,CAACC,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAAC;EAC9CX,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEO,UAAU,CAAC;;EAExC;EACA,IAAII,KAAK,GAAGJ,UAAU,CAAC,CAAC,CAAC,CAACI,KAAK,CAACF,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAAC;EAC7CX,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEW,KAAK,CAAC;EAI9B,oBACE;IAAA,UAEGJ,UAAU,CAACE,GAAG,CAAC,CAACG,IAAI,EAAEC,CAAC,kBACtB;MAAA,wBACE;QAAA,UAAKD,IAAI,CAACE;MAAI;QAAA;QAAA;QAAA;MAAA,QAAM,EAGnBP,UAAU,CAACM,CAAC,CAAC,CAACF,KAAK,CAACF,GAAG,CAAC,CAACM,OAAO,EAAEF,CAAC,kBAClC;QAAA,WACGE,OAAO,CAACD,IAAI,OAAGC,OAAO,CAACV,SAAS;MAAA,GAD3BU,OAAO,CAACC,EAAE;QAAA;QAAA;QAAA;MAAA,QAEd,CACL,eAGD,QAAC,GAAG;QAAC,KAAK,EAAET,UAAU,CAACM,CAAC,CAAC,CAACF;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA,GAX3BC,IAAI,CAACI,EAAE;MAAA;MAAA;MAAA;IAAA,QAaX;EACP;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAA,MAhCKV,MAAM;AAkCZ,eAAeA,MAAM;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}