{"ast":null,"code":"var _jsxFileName = \"/Users/kendallhtucker1/dev/university of helskinki full stack class/full-stack-open/exercises-2.1-1.5/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Course = props => {\n  //make course a local array\n  const course = {\n    ...props.course\n  };\n\n  //seperate parts from course\n  var parts = course.parts;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.course.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), parts.map((part, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [part.name, \" \", part.exercises]\n    }, part.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = Course;\nconst Sum = props => {\n  //make course a local array\n  const course = {\n    ...props.course\n  };\n\n  //seperate parts from course\n  var parts = course.parts;\n  const initialValue = 0;\n  var total = parts.reduce((sum, amount) => {\n    return sum + amount.exercises;\n  }, initialValue);\n  console.log(total);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Total exercises \", total]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 8\n  }, this);\n};\n_c2 = Sum;\nconst App = () => {\n  const course = {\n    id: 1,\n    name: 'Half Stack application development',\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10,\n      id: 1\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7,\n      id: 2\n    }, {\n      name: 'State of a component',\n      exercises: 14,\n      id: 3\n    }, {\n      name: 'Cooking for cockroaches',\n      exercises: 69,\n      id: 4\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Course, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Sum, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Course\");\n$RefreshReg$(_c2, \"Sum\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["Course","props","course","parts","name","map","part","i","exercises","id","Sum","initialValue","total","reduce","sum","amount","console","log","App"],"sources":["/Users/kendallhtucker1/dev/university of helskinki full stack class/full-stack-open/exercises-2.1-1.5/src/App.js"],"sourcesContent":["\nconst Course = (props) => {\n  //make course a local array\n  const course = { ...props.course }\n\n  //seperate parts from course\n  var parts = course.parts\n\n  return (\n    <div>\n      <h1>{props.course.name}</h1>\n      {parts.map((part, i) =>\n        <p key={part.id}>\n          {part.name} {part.exercises}\n        </p>\n      )}\n    </div>\n  )\n}\n\nconst Sum = (props) => {\n  //make course a local array\n  const course = { ...props.course }\n\n  //seperate parts from course\n  var parts = course.parts\n\n  const initialValue = 0\n  var total = parts.reduce((sum, amount) => {\n    return sum + amount.exercises\n  }, initialValue  )\n\n  console.log(total)\n\n  return (\n       <p>Total exercises {total}</p>\n    )\n  }\n\nconst App = () => {\n  const course = {\n    id: 1,\n    name: 'Half Stack application development',\n    parts: [\n      {\n        name: 'Fundamentals of React',\n        exercises: 10,\n        id: 1\n      },\n      {\n        name: 'Using props to pass data',\n        exercises: 7,\n        id: 2\n      },\n      {\n        name: 'State of a component',\n        exercises: 14,\n        id: 3\n      },\n      {\n        name: 'Cooking for cockroaches',\n        exercises: 69,\n        id: 4\n      }\n    ]\n  }\n\n  return (\n    <div>\n    <Course course={course} />\n    <Sum course={course} />\n    </div>\n  )\n}\n\nexport default App"],"mappings":";;AACA,MAAMA,MAAM,GAAIC,KAAK,IAAK;EACxB;EACA,MAAMC,MAAM,GAAG;IAAE,GAAGD,KAAK,CAACC;EAAO,CAAC;;EAElC;EACA,IAAIC,KAAK,GAAGD,MAAM,CAACC,KAAK;EAExB,oBACE;IAAA,wBACE;MAAA,UAAKF,KAAK,CAACC,MAAM,CAACE;IAAI;MAAA;MAAA;MAAA;IAAA,QAAM,EAC3BD,KAAK,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBACjB;MAAA,WACGD,IAAI,CAACF,IAAI,OAAGE,IAAI,CAACE,SAAS;IAAA,GADrBF,IAAI,CAACG,EAAE;MAAA;MAAA;MAAA;IAAA,QAEX,CACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAA,KAjBKT,MAAM;AAmBZ,MAAMU,GAAG,GAAIT,KAAK,IAAK;EACrB;EACA,MAAMC,MAAM,GAAG;IAAE,GAAGD,KAAK,CAACC;EAAO,CAAC;;EAElC;EACA,IAAIC,KAAK,GAAGD,MAAM,CAACC,KAAK;EAExB,MAAMQ,YAAY,GAAG,CAAC;EACtB,IAAIC,KAAK,GAAGT,KAAK,CAACU,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAK;IACxC,OAAOD,GAAG,GAAGC,MAAM,CAACP,SAAS;EAC/B,CAAC,EAAEG,YAAY,CAAG;EAElBK,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;EAElB,oBACK;IAAA,+BAAoBA,KAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAAK;AAEnC,CAAC;AAAA,MAjBGF,GAAG;AAmBT,MAAMQ,GAAG,GAAG,MAAM;EAChB,MAAMhB,MAAM,GAAG;IACbO,EAAE,EAAE,CAAC;IACLL,IAAI,EAAE,oCAAoC;IAC1CD,KAAK,EAAE,CACL;MACEC,IAAI,EAAE,uBAAuB;MAC7BI,SAAS,EAAE,EAAE;MACbC,EAAE,EAAE;IACN,CAAC,EACD;MACEL,IAAI,EAAE,0BAA0B;MAChCI,SAAS,EAAE,CAAC;MACZC,EAAE,EAAE;IACN,CAAC,EACD;MACEL,IAAI,EAAE,sBAAsB;MAC5BI,SAAS,EAAE,EAAE;MACbC,EAAE,EAAE;IACN,CAAC,EACD;MACEL,IAAI,EAAE,yBAAyB;MAC/BI,SAAS,EAAE,EAAE;MACbC,EAAE,EAAE;IACN,CAAC;EAEL,CAAC;EAED,oBACE;IAAA,wBACA,QAAC,MAAM;MAAC,MAAM,EAAEP;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eAC1B,QAAC,GAAG;MAAC,MAAM,EAAEA;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACjB;AAEV,CAAC;AAAA,MAlCKgB,GAAG;AAoCT,eAAeA,GAAG;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}